// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlog.Models;

namespace MyBlog.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyBlog.Models.TbBlog", b =>
                {
                    b.Property<int>("TbBlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogContent")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BlogImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryTbBlogCategoriesId")
                        .HasColumnType("int");

                    b.HasKey("TbBlogId");

                    b.HasIndex("CategoryTbBlogCategoriesId");

                    b.ToTable("TbBlog");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlogCategories", b =>
                {
                    b.Property<int>("TbBlogCategoriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TbBlogCategoriesId");

                    b.ToTable("TbBlogCategories");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlogComments", b =>
                {
                    b.Property<int>("TbBlogCommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentContext")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TbBlogCommentsId");

                    b.HasIndex("BlogId");

                    b.ToTable("TbBlogComments");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlogImages", b =>
                {
                    b.Property<int>("TbBlogImagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TbBlogImagesId");

                    b.HasIndex("BlogId");

                    b.ToTable("TbBlogImages");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlog", b =>
                {
                    b.HasOne("MyBlog.Models.TbBlogCategories", "Category")
                        .WithMany("Blog")
                        .HasForeignKey("CategoryTbBlogCategoriesId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlogComments", b =>
                {
                    b.HasOne("MyBlog.Models.TbBlog", "Blog")
                        .WithMany("TbBlogComments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlogImages", b =>
                {
                    b.HasOne("MyBlog.Models.TbBlog", "Blog")
                        .WithMany("TbBlogImages")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlog", b =>
                {
                    b.Navigation("TbBlogComments");

                    b.Navigation("TbBlogImages");
                });

            modelBuilder.Entity("MyBlog.Models.TbBlogCategories", b =>
                {
                    b.Navigation("Blog");
                });
#pragma warning restore 612, 618
        }
    }
}
